version: '3.8'

services:
  message:
    container_name: message-microservice
    build:
      context: ./message
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

  user:
    container_name: user-microservice
    build:
      context: ./user
      dockerfile: Dockerfile
    ports:
      - '${SYMFONY_PORT}:8000'
    volumes:
      - './user/:/app'
      - './env:/.env'
    environment:
      - SYMFONY_PROJECT_NAME=securedWhisker
      - DATABASE_URL=pgsql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_database:5432/${POSTGRES_DB}?serverVersion=16&charset=utf8
    depends_on:
      postgres_database:
        condition: service_healthy
    networks:
      - app-network

  postgres_database:
    container_name: user-database
    restart: always
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports: 
      - "5432:5432"
    volumes:
      - ./docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge