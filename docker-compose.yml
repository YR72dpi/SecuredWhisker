version: '3.8'

services:
  # user:
  #   container_name: user-microservice
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-user
  #   ports:
  #     - '${SYMFONY_PORT}:8000'
  #   volumes:
  #     - './user/:/app'
  #     - './env:/.env'
  #   environment:
  #     - SYMFONY_PROJECT_NAME=securedWhisker
  #     - DATABASE_URL=pgsql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_database:5432/${POSTGRES_DB}?serverVersion=16&charset=utf8
  #   depends_on:
  #     postgres_database:
  #       condition: service_healthy
  #   networks:
  #     - app-network

  redis:
    image: redis:latest
    container_name: redis_server
    restart: always
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro  # Monte le fichier de configuration en lecture seule
    environment:
      - REDIS_PORT=6379

  postgres_database:
    container_name: user-database
    restart: always
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports: 
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      - ./docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - app-network

volumes:
  database_data:
  redis_data:

networks:
  app-network:
    driver: bridge