# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3'

# Define services
services:
  # message:
  #   image: golang:1.20-alpine
  #   container_name: go_app
  #   working_dir: /app
  #   volumes:
  #     - ./message/:/app
  #   ports:
  #     - "8080:8080"
  #   command: sh -c "go run app.go"
  #   depends_on:
  #     - postgres
  #   environment:
  #     DB_PORT: ${POSTGRES_PORT}
  #     DB_HOST: postgres_database

  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}

  # redis:
  #   image: redis:latest
  #   container_name: redis_server
  #   restart: always
  #   command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}"]
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #     - ./redis.conf:/usr/local/etc/redis/redis.conf:ro  # Monte le fichier de configuration en lecture seule
  #   environment:
  #     - REDIS_PORT=6379

  user:
    build:
      context: .
      dockerfile: Dockerfile-user
    ports:
      - '8000:8000'
    volumes:
      - './user/:/app'
      - './env:/.env'
    environment:
      - SYMFONY_PROJECT_NAME=securedWhisker
      - SYMFONY_DATABASE_PASSWORD=securedwhisker
      - DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_database:${POSTGRES_PORT}/${POSTGRES_DB}?serverVersion=16&charset=utf8"
    depends_on:
      - postgres_database

  postgres_database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      - ./docker/db/data:/var/lib/postgresql/data:rw
      
volumes:
  database_data:
  redis_data: